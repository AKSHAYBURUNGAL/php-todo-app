stages:
  - sonar
  - build
  - scan
  - push
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  IMAGE_TAG: "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA"

before_script:
  - echo "Running on branch $CI_COMMIT_BRANCH"

sonarqube_scan:
  stage: sonar
  script:
    - sonar-scanner -Dsonar.projectKey=php-todo-app -Dsonar.sources=. -Dsonar.host.url=$SONAR_HOST -Dsonar.login=$SONAR_TOKEN
  only:
    - staging

docker_build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker build -t $IMAGE_TAG .
  only:
    - staging

trivy_scan:
  stage: scan
  image: aquasec/trivy:latest
  script:
    - trivy image --exit-code 0 --severity MEDIUM,HIGH,CRITICAL $IMAGE_TAG
  only:
    - staging

docker_push:
  stage: push
  image: docker:latest
  services:
    - docker:dind
  script:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker push $IMAGE_TAG
  only:
    - staging

deploy_to_minikube:
  stage: deploy
  script:
    - echo "$KUBECONFIG_CONTENT" | base64 -d > kubeconfig
    - export KUBECONFIG=$PWD/kubeconfig
    - sed -i "s|image:.*|image: $IMAGE_TAG|" k8s/php-deployment.yaml
    - kubectl apply -f k8s/mysql-deployment.yaml
    - kubectl apply -f k8s/php-deployment.yaml
  only:
    - staging

